<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.1 (Python 3.11.0 on win32)" generated="20230118 16:48:04.663" rpa="false" schemaversion="3">
<suite id="s1" name="ApiTesting" source="C:\Robot\Udm\ApiTesting">
<suite id="s1-s1" name="Tests" source="C:\Robot\Udm\ApiTesting\tests">
<suite id="s1-s1-s1" name="Api Testing Usuarios" source="C:\Robot\Udm\ApiTesting\tests\api_testing_usuarios.robot">
<test id="s1-s1-s1-t1" name="Cenário 04: Logar com o novo usuário criado" line="25">
<kw name=" Criar um usuário novo" library="api_testing_usuarios">
<kw name="Generate Random String" library="String">
<var>${palavra_aleatoria}</var>
<arg>length=4</arg>
<arg>chars=[LETTERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230118 16:48:04.933" level="INFO">${palavra_aleatoria} = wpas</msg>
<status status="PASS" starttime="20230118 16:48:04.932" endtime="20230118 16:48:04.933"/>
</kw>
<kw name="Convert To Lower Case" library="String">
<var>${palavra_aleatoria}</var>
<arg>${palavra_aleatoria}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230118 16:48:04.935" level="INFO">${palavra_aleatoria} = wpas</msg>
<status status="PASS" starttime="20230118 16:48:04.934" endtime="20230118 16:48:04.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Minha palavra aleatoria: ${palavra_aleatoria}@emailteste.com</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230118 16:48:04.937" level="INFO">Minha palavra aleatoria: wpas@emailteste.com</msg>
<status status="PASS" starttime="20230118 16:48:04.936" endtime="20230118 16:48:04.939"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${EMAIL_TESTE}</arg>
<arg>${palavra_aleatoria}@emailteste.com</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230118 16:48:04.941" level="INFO">${EMAIL_TESTE} = wpas@emailteste.com</msg>
<status status="PASS" starttime="20230118 16:48:04.940" endtime="20230118 16:48:04.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${EMAIL_TESTE}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230118 16:48:04.943" level="INFO">wpas@emailteste.com</msg>
<status status="PASS" starttime="20230118 16:48:04.943" endtime="20230118 16:48:04.944"/>
</kw>
<status status="PASS" starttime="20230118 16:48:04.931" endtime="20230118 16:48:04.944"/>
</kw>
<kw name=" Cadastrar o usuário criado na ServeRest" library="api_testing_usuarios">
<arg>email=${EMAIL_TESTE}</arg>
<arg>status_code_desejado=201</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>nome=Fulano da Silva</arg>
<arg>email=${email}</arg>
<arg>password=1234</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230118 16:48:04.947" level="INFO">${body} = {'nome': 'Fulano da Silva', 'email': 'wpas@emailteste.com', 'password': '1234', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20230118 16:48:04.946" endtime="20230118 16:48:04.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${body}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230118 16:48:04.948" level="INFO">{'nome': 'Fulano da Silva', 'email': 'wpas@emailteste.com', 'password': '1234', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20230118 16:48:04.947" endtime="20230118 16:48:04.950"/>
</kw>
<kw name="Criar Sessão na ServeRest" library="api_testing_usuarios">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230118 16:48:04.951" level="INFO">${headers} = {'accept': 'application/json', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230118 16:48:04.951" endtime="20230118 16:48:04.952"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>alias=ServeRest</arg>
<arg>url=https://serverest.dev</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230118 16:48:04.953" level="INFO">Creating Session using : alias=ServeRest, url=https://serverest.dev, headers={'accept': 'application/json', 'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230118 16:48:04.952" endtime="20230118 16:48:04.955"/>
</kw>
<status status="PASS" starttime="20230118 16:48:04.950" endtime="20230118 16:48:04.955"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resposta}</var>
<arg>alias=ServeRest</arg>
<arg>url=/usuarios</arg>
<arg>json=${body}</arg>
<arg>expected_status=${status_code_desejado}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230118 16:48:05.361" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '104'} 
 body=b'{"nome": "Fulano da Silva", "email": "wpas@emailteste.com", "password": "1234", "administrador": "true"}' 
 </msg>
<msg timestamp="20230118 16:48:05.362" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'af8fa161-e86c-4998-93f3-bd7f2339b4ac', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '0a82e27f35c61a0b6bdbe3851a2821dd', 'Date': 'Wed, 18 Jan 2023 19:48:07 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "uCz0W7PRvofjUg4F"
} 
 </msg>
<msg timestamp="20230118 16:48:05.363" level="INFO">C:\Python311\Lib\site-packages\urllib3\connectionpool.py:1045: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20230118 16:48:05.365" level="INFO">${resposta} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230118 16:48:04.955" endtime="20230118 16:48:05.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${resposta.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230118 16:48:05.367" level="INFO">{'message': 'Cadastro realizado com sucesso', '_id': 'uCz0W7PRvofjUg4F'}</msg>
<status status="PASS" starttime="20230118 16:48:05.366" endtime="20230118 16:48:05.367"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${ID_USUARIO}</arg>
<arg>${resposta.json()["_id"]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230118 16:48:05.369" level="INFO">${ID_USUARIO} = uCz0W7PRvofjUg4F</msg>
<status status="PASS" starttime="20230118 16:48:05.368" endtime="20230118 16:48:05.370"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<arg>${resposta.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230118 16:48:05.372" level="INFO">${RESPOSTA} = {'message': 'Cadastro realizado com sucesso', '_id': 'uCz0W7PRvofjUg4F'}</msg>
<status status="PASS" starttime="20230118 16:48:05.370" endtime="20230118 16:48:05.372"/>
</kw>
<status status="PASS" starttime="20230118 16:48:04.945" endtime="20230118 16:48:05.373"/>
</kw>
<kw name="Realizar Login com o usuário" library="api_testing_usuarios">
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>${EMAIL_TESTE}</arg>
<arg>password=1234</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230118 16:48:05.376" level="FAIL">Expected even number of keys and values, got 1.</msg>
<status status="FAIL" starttime="20230118 16:48:05.375" endtime="20230118 16:48:05.376"/>
</kw>
<kw name="Criar Sessão na ServeRest" library="api_testing_usuarios">
<status status="NOT RUN" starttime="20230118 16:48:05.377" endtime="20230118 16:48:05.377"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resposta}</var>
<arg>alias=ServeRest</arg>
<arg>url=/login</arg>
<arg>json=${body}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="NOT RUN" starttime="20230118 16:48:05.378" endtime="20230118 16:48:05.378"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<arg>${resposta.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20230118 16:48:05.378" endtime="20230118 16:48:05.379"/>
</kw>
<status status="FAIL" starttime="20230118 16:48:05.374" endtime="20230118 16:48:05.379"/>
</kw>
<kw name="Conferir se o Login ocorreu com sucesso" library="api_testing_usuarios">
<status status="NOT RUN" starttime="20230118 16:48:05.379" endtime="20230118 16:48:05.380"/>
</kw>
<status status="FAIL" starttime="20230118 16:48:04.930" endtime="20230118 16:48:05.380">Expected even number of keys and values, got 1.</status>
</test>
<status status="FAIL" starttime="20230118 16:48:04.745" endtime="20230118 16:48:05.382"/>
</suite>
<status status="FAIL" starttime="20230118 16:48:04.740" endtime="20230118 16:48:05.385"/>
</suite>
<status status="FAIL" starttime="20230118 16:48:04.704" endtime="20230118 16:48:05.387"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="ApiTesting">ApiTesting</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1" name="Tests">ApiTesting.Tests</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s1" name="Api Testing Usuarios">ApiTesting.Tests.Api Testing Usuarios</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
